from django.contrib.auth.models import User
from django.core.validators import MinValueValidator
from django.db import models

from api.validators import validate_max_digit


class UserDB(models.Model):
    """
    Modified UserDB with extra parameters
    """
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    user_type = models.CharField(blank=False, null=False, max_length=30)
    fcm_token = models.CharField(max_length=500, null=True, blank=True)
    promotion_consent = models.BooleanField(default=False)
    country = models.CharField(max_length=2, null=True, blank=True)
    nationality = models.CharField(max_length=255, null=True, blank=True)
    guid = models.CharField(max_length=100, null=True, blank=True)
    refresh_token = models.CharField(max_length=100, null=True, blank=True)

    class Meta:
        """
        Meta data for UserDB model
        """
        permissions = [
            ('app_user', 'App user permissions'),
            ('cms_user', 'CMS user permissions'),
            ('store_user', 'Store user permissions'),
        ]


class VoucherCodeDB(models.Model):
    """
    Model for storing voucher code generated by user
    """
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    voucher_code = models.CharField(
        max_length=30, unique=True, blank=False, null=False)
    voucher_created_date = models.DateTimeField(auto_now_add=True)
    voucher_value = models.PositiveIntegerField(default=0)
    redeemed = models.BooleanField(default=False)
    voucher_redeem_date = models.DateTimeField(blank=True, null=True)


class PointsDB(models.Model):
    """
    Model which stores point details of a user using the loyalty app
    """
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    point_balance = models.DecimalField(
        default=0.0000, decimal_places=4, null=False, blank=False, max_digits=11, validators=[MinValueValidator(0)])
    points_date = models.DateField(auto_now=True)
    last_update = models.DateTimeField(auto_now=True)


class TransactionDB(models.Model):
    """
    Model which stores users transaction details
    """
    invoice_id = models.CharField(max_length=30)
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    product_name = models.CharField(max_length=200, blank=False, null=False)
    product_cost = models.DecimalField(
        default=0.0000, decimal_places=4, null=False, blank=False, max_digits=11, validators=[MinValueValidator(0)])
    points_applied = models.DecimalField(
        default=0.0000, decimal_places=4, null=False, blank=False, max_digits=11, validators=[MinValueValidator(0)])
    points_deducted = models.DecimalField(
        default=0.0000, decimal_places=4, null=False, blank=False, max_digits=11, validators=[MinValueValidator(0)])
    quantity = models.IntegerField(default=1)
    returned = models.BooleanField(default=False)
    transaction_date = models.DateTimeField(auto_now_add=True)


class AppConfigDB(models.Model):
    """
    Model which stores the app configuration details
    """
    loyalty_percent = models.PositiveIntegerField(
        default=3, validators=[validate_max_digit])


class EnabledCountriesDB(models.Model):
    """
    Model which stores the enabled countries
    """
    country_code = models.CharField(max_length=2, blank=False, null=False)
    country_name = models.CharField(max_length=255, blank=False, null=False)